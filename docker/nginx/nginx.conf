events {
  # The maximum number of simultaneous connections that can be opened by
  # a worker process.
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  # Don't tell nginx version to clients.
  server_tokens off;

  # Enable gzipping of responses.
  gzip on;

  # Set the Vary HTTP header as defined in the RFC 2616.
  gzip_vary on;

  gzip_types application/atom+xml application/geo+json application/javascript application/x-javascript application/json application/ld+json application/manifest+json application/rdf+xml application/rss+xml application/xhtml+xml application/xml font/eot font/otf font/ttf image/svg+xml text/css text/javascript text/plain text/xml;

  proxy_cache_path /var/cache/nginx use_temp_path=off levels=1:2 keys_zone=cache_zone:100m max_size=10g inactive=1w;

  server {
    listen 80;
    listen [::]:80;
    server_name localhost ;

    location / {
      include proxy.conf;

      proxy_pass http://dev:5678/;
    }
  }

  server {
    listen 12345;
    listen [::]:12345;
    server_name localhost ;

    location / {
      include proxy.conf;

      proxy_pass http://dev:12345/;
    }
  }

  server {
    listen 80;
    listen [::]:80;
    server_name img.localhost;

    proxy_cache_key "$scheme$request_method$host$request_uri";
    expires max;
    proxy_cache cache_zone;
    proxy_cache_valid 200 302 301 1w;
    add_header X-Cached $upstream_cache_status;
    proxy_ignore_headers "Set-Cookie";

    location / {
      include proxy.conf;


      proxy_pass http://imgproxy:8080/;
    }
  }

  server {
    listen 80;
    listen [::]:80;
    server_name media.localhost ;

    location / {
      include proxy.conf;

      proxy_pass http://minio:9000/;
    }
  }

  server {
    listen 80;
    listen [::]:80;
    server_name console.media.localhost ;

    location / {
      include proxy.conf;

      proxy_pass http://minio:9001/;
    }
  }


}
