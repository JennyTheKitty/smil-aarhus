version: '3.9'
services:
  db:
    ports:
      - '6543:5432'
    env_file:
      - docker/.env
  minio:
    env_file:
      - docker/.env
  imgproxy:
    env_file:
      - .env

  nginx:
    image: nginx:alpine

    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/proxy.conf:/etc/nginx/proxy.conf
      - nginx_cache:/var/cache/nginx

    ports:
      - '12345:12345'

  dev:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        SETUP_MODE: dev

    env_file:
      - docker/.env
    environment:
      PORT: 5678

    volumes:
      - .:/work

      # let's us run docker & docker-compose from inside container (used for yarn setup)
      - $XDG_RUNTIME_DIR/docker.sock:/var/run/docker.sock
      - nm_root:/work/node_modules
      - nm_app_admin:/work/@app/admin/node_modules
      - nm_app_client:/work/@app/client/node_modules
      - nm_app_config:/work/@app/config/node_modules
      - nm_app_db:/work/@app/db/node_modules
      - nm_app_graphql:/work/@app/graphql/node_modules
      - nm_app_server:/work/@app/server/node_modules
      - vscode_extensions:/root/.vscode-server

    working_dir: /work
    networks:
      - default
    ports:
      # Node `--inspect=...` port numbers for debugging
      - '9678:9678'
      - '9876:9876'
      - '9757:9757'
    depends_on:
      - db
      - minio
      - nginx
      - imgproxy
    command: sleep infinity

volumes:
  nm_root:
  nm_app_admin:
  nm_app_client:
  nm_app_config:
  nm_app_db:
  nm_app_graphql:
  nm_app_server:
  vscode_extensions:
  nginx_cache:
